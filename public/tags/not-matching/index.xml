<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Not Matching on MikeDixson.com</title>
    <link>https://mikedixson.com/tags/not-matching/</link>
    <description>Recent content in Not Matching on MikeDixson.com</description>
    <generator>Hugo</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 21 Mar 2018 11:32:01 +0000</lastBuildDate>
    <atom:link href="https://mikedixson.com/tags/not-matching/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Solved] WDS Driver Filters Not Working</title>
      <link>https://mikedixson.com/solved-wds-driver-filters-not-working/</link>
      <pubDate>Wed, 21 Mar 2018 11:32:01 +0000</pubDate>
      <guid>https://mikedixson.com/solved-wds-driver-filters-not-working/</guid>
      <description>&lt;p&gt;Like many people it seems I’ve been scratching my head as to why  WDS’s Driver Package Filters were not matching my hardware when imaging a machine that I’d created a driver package group for.&lt;/p&gt;&#xA;&lt;p&gt;After looking at &lt;a href=&#34;https://technet.microsoft.com/en-us/library/hh241327.aspx&#34;&gt;Greg Shields technet post&lt;/a&gt; I was convinced I just needed to grab the model name straight off of the machine type beforehand via a powershell WMI get and I’d be laughing. Alas this still did not work.&lt;/p&gt;&#xA;&lt;p&gt;I found the best way was to enable the Debug log on WDS, then pull the info directly from what WDS was seeing and use that to create the filters.&lt;br&gt;&#xA;I’ve also written a powershell script to pull the details from the debug log as otherwise it takes a fair bit of time.&lt;br&gt;&#xA;I’ve posted this here:&lt;br&gt;&#xA;&lt;a href=&#34;https://github.com/mikedixson/Get-SMBios-Strings-From-WDS&#34;&gt;https://github.com/mikedixson/Get-SMBios-Strings-From-WDS&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
  </channel>
</rss>